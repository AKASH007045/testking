<?php

/**
 * Implements hook_menu().
 */
function custom_invoice_menu() {
  $items = array();
  $items['invoice'] = array(
    'title' => 'Invoice',
    'page callback' => 'custom_invoice_page',
    'access arguments' => array('STH User'),
    'file' => 'custom_invoice.pages.inc',
    'type' => MENU_CALLBACK
  );
  $items['invoice/email'] = array(
    'title' => 'Email invoice in PDF format',
    'page callback' => 'custom_invoice_email',
    'access arguments' => array('STH User'),
    'file' => 'custom_invoice.pages.inc',
    'type' => MENU_CALLBACK
  );
  $items['invoice/print'] = array(
    'title' => 'Print invoice in PDF format',
    'page callback' => 'custom_invoice_print',
    'access arguments' => array('STH User'),
    'file' => 'custom_invoice.pages.inc',
    'type' => MENU_CALLBACK
  );
  $items['invoice/payment'] = array(
    'title' => 'Payment',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_invoice_payment_request'),
    'access arguments' => array('STH User'),
    'file' => 'custom_invoice.pages.inc',
    'type' => MENU_CALLBACK
  );
  $items['invoice/payment/success'] = array(
    'title' => 'Payment',
    'page callback' => 'custom_invoice_payment_success',
    'access callback' => TRUE,
    'file' => 'custom_invoice.pages.inc',
    'type' => MENU_CALLBACK
  );
  $items['invoice/payment/failure'] = array(
    'title' => 'Payment',
    'page callback' => 'custom_invoice_payment_failure',
    'access callback' => TRUE,
    'file' => 'custom_invoice.pages.inc',
    'type' => MENU_CALLBACK
  );
  
  $items['plandescription/%'] = array(
    'title' => 'Plan description callback',
    'page callback' => 'plan_desc_get_description',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/*
* onchange of payment plans
*/
function plan_desc_get_description($pid) { 
  if (!is_numeric($pid) && $pid!='default') {
    return "";
  }
  global $user;
  module_load_include('inc', 'custom_invoice', 'custom_invoice.pages');
  if ($user->uid) {
    $acct_id = $user->name;
    if ($acct_id) {
      $get_amount_info = get_tm_user_amount_info($acct_id);
    }
  }
  $invoice_id = $get_amount_info['invoice_id'];
  return get_schedule_for_plan_id($acct_id, $invoice_id, $pid);
}
/**
 * Implements hook_theme()
 */

function custom_invoice_theme($existing, $type, $theme, $path) {
  return array(
    'renewal_invoice' => array(
      'arguments' => array('seat_holds' => NULL, 'name' => NULL, 'user_info' => NULL),
      'template' => 'templates/invoice/renewal_invoice_page'
    ),
    'renewal_invoice_pdf' => array(
      'arguments' => array('seat_holds' => NULL, 'name' => NULL, 'user_info' => NULL),
      'template' => 'templates/invoice/pdf/renewal_invoice_page'
    ),
    'invoice_page' => array(
      'arguments' => array('output' => NULL),
      'template' => 'templates/invoice_page'
    ),
    'invoice_user_info_block' =>  array(
      'arguments' => array('user_info' => NULL, 'name' => NULL, 'acct_rep' => NULL),
      'template' => 'templates/user_info_block'
    ),
     'tm_payment_success' => array(
      'arguments' => array('name' => NULL, 'acct_id' => NULL, 'cc_num' => NULL),
      'template' => 'templates/tm-payment-success'
    ),
    'tm_payment_error' => array(
      'arguments' => array('name' => NULL, 'acct_id' => NULL, 'cc_num' => NULL),
      'template' => 'templates/tm-payment-error'
    ),
  );
}

/**
 * Invoice Page user info Block
 */
function invoice_user_info_block() {
  module_load_include('inc', 'custom_block', 'custom_block.block');
  global $user;
  $acct_id = $user->name;
  $cnt = 0;
  if (isset($acct_id)) {
    $name = get_user_full_name($user);
    $user_info = get_user_info($acct_id);
    $acct_rep = custom_block_account_rep('block_2');
    $output = '';
    return theme('invoice_user_info_block', array('user_info' => $user_info, 'name' => $name, 'acct_rep' => $acct_rep));
  }
  return '';
}

function week_start_date($week, $year, $format = 'Ymd', $date = FALSE) {
  if ($date) {
      $week = date("W", strtotime($date));
      $year = date("o", strtotime($date));
  }

  $week = sprintf("%02s", $week);

  $desiredMonday = date($format, strtotime("$year-W$week-1"));

  return $desiredMonday;
}

function custom_invoice_cron(){
  $week = date("W", strtotime($date));
  $year = date("o", strtotime($date));
  $sStartDate = week_start_date($week, $year, 'Y-m-d');
  $sEndDate   = date('Y-m-d', strtotime('+6 days', strtotime($sStartDate)));
  
  $from = strtotime($sStartDate);
  $to = strtotime($sEndDate);
  
  $result = get2015_playoff_data($from, $to); 
}

function get2015_playoff_data($from=NULL, $to=NULL){
  if(
    (isset($from) && !empty($from))
    &&
    (isset($to) && !empty($to))
  ){ 
    $query = db_select('tbl_2015_playoff', 'b');
    $chk = (bool)$query->fields('b', array('acct_id'))
    ->condition('timestamp', strtotime($from), '>=')
    ->condition('timestamp', strtotime($to), '<=')
    ->execute()
    ->fetchField();
    
    if($chk){
      $result = $query->fields('b')
      ->condition('timestamp', strtotime($from), '>=')
      ->condition('timestamp', strtotime($to), '<=')
      ->execute()
      ->fetchAll();
      return $result;
    }
    else{
      return false;
    }
  }
  else{
    return false;
  }
}

function _price_code_check() {
  module_load_include('inc', 'tm_data', 'tm_data'); 
  global $user;
  $rows = array();
  $seats = array();    
  $seats = tm_get_seats_on_account($user->name);
  foreach ($seats as $key => $seat) {
    if (strpos(strtolower($seat->price_code), 'k') ===2) {
      return true;
    }
  }
  return false;
}