<?php

// @file


/**
 * Implements hook_menu().
 */
function custom_take_over_pages_menu() {
  $items = array();
  $items['admin/manage/add/takeover-page'] = array( // Menu for add take Over Page (Admin panel)
    'title' => 'Add Takeover Pages',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_add_take_over'),
    'file' => 'custom_take_over_pages.pages.inc',
    'access arguments' => array('STH User'),
    'type' => MENU_CALLBACK
  );
  
  $items['admin/post/take-over/ajax'] = array( // menu to save Nodes with Ajax, from Take over-view page (manage Take over Page)
    'title' => 'Takeover Page Ajax Post',
    'page callback' => 'test_test_ajax_post',
    'access arguments' => array('STH User'),
    'type' => MENU_CALLBACK
  );
  
  $items['admin/config/take-over-page'] = array( // Menu for go-take over page, after login (Admin panel)
    'title' => 'Takeover Pages Config',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('take_over_page_config'),      
    'file' => 'custom_take_over_pages.pages.inc',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,  
  );  
  return $items;
}



/*
 * Function to Update Node URL, Form Called dynamically from View-take over page
 */
function custom_take_over_pages_form($nid) {
    $args = func_get_args();
    
    $form['url_alias'] = array(
        '#type' => 'textfield',
        '#title' => t('URL Alias'),
        '#required' => true,
        '#default_value' => drupal_strtolower(drupal_get_path_alias('node/'.$args[2])),
    );
    
    $form['nid'] = array(
        '#type' => 'textfield',
        '#title' => t(' '),
        '#default_value' => $args[2],
        '#attributes' => array('class' => array('custom-to-page-nid')),        
       );
         
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
        '#attributes' => array('class' => array('custom-to-page-form')),
    );
    return $form;    
    
}

function custom_take_over_pages_form_submit($form, $form_state){
  global $user;
  $val = $form_state['values'];
  
  
   $url_alias = db_select('url_alias', 'n')
    ->fields('n',array('pid'))
    ->condition('source', 'node/'.$val['nid'],'=')
    ->orderBy('pid', 'DESC')//ORDER BY created  
    ->range(0,1)           
    ->execute()
    ->fetchAssoc();
  
  $path = array(
    'pid' => $url_alias['pid'],
    'source' => 'node/'.$val['nid'],
    'alias' => drupal_strtolower(str_replace(" ","-",$val['url_alias'])),
  );
  
  path_save($path);    
}



/**
 * Implements hook_block_info().
 */
function custom_take_over_pages_block_info() {
  $blocks = array();
  $blocks['take_over_pages_view'] = array( // Block for Calling All Url alias form on view-take over page
    'info' => t('take over Pages'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view()..
 */
function custom_take_over_pages_block_view($delta) {
  $block = array();
  global $user;
  module_load_include('inc', 'custom_take_over_pages', 'custom_take_over_pages.pages');
  switch ($delta) {
    case 'take_over_pages_view':
        $block['subject'] = t(' ');
        $block['content'] = take_over_pages_view();
      return $block;
  }
}




function test_test_ajax_post(){
    $data = $_POST['name'];
    $type = "take_over_pages";
    $nodes = node_load_multiple(array(), array('type' => $type)); 
    foreach($nodes as $products){
        if (in_array($products->nid, $data)) {
            $products->status = 0;
        }
        else{
            $products->status = 1;
        }
        node_save($products);
    }
    
}


function take_over_page(){
   global $user;
    $query = db_select('weight_weights', 'w');
    $query->join('node', 'n', 'w.entity_id = n.nid');
    //$query->join('field_data_field_take_over_date', 'd', 'd.entity_id = n.nid');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'take_over_pages', '=');
    //$query->where('d.field_take_over_date_value2 > now()');
    //$query->where('d.field_take_over_date_value < now()');
    $query->condition('n.status', '1', '=');
    $query->orderBy('w.weight', 'DESC'); //ORDER BY created    
    $result = $query->execute();
    while ($record = $result->fetchAssoc()) {
        $node = node_load($record['nid']);
        
        $occurence =  $node->field_occurence['und'][0]['value']; 
        
        $sql = "SELECT id FROM {tm_take_over} WHERE  acct_id = :uid AND nid = :nid";
        $args = array(':uid' => $user->uid, ':nid' => $node->nid);
        $view_count = db_query($sql, $args)->fetchField();
    
    
        if(variable_get('birth_nid',0) != $node->nid && variable_get('pawp_nid',0) != $node->nid){ // if node is neither B'day and not PAWP
            if((strtotime($node->field_take_over_date['und'][0]['value']) < time()) && (strtotime($node->field_take_over_date['und'][0]['value2']) > time())){
                if($occurence == 1){
                    if(!$view_count){
                        take_over_insert_data($node->nid, $user->uid); // write date in takeover table
                        $output = chk_take_over_conditions($node->nid); // chk conditions
                    }
                }
                else{ // if take over have Multiple occurence, then we directly chlk the conditions
                    $output = chk_take_over_conditions($node->nid);
                }
            }
        }
        else{ // if Node is ither B'day OR PAWP
                $output = chk_take_over_conditions($node->nid);
        }
    }
    
    return $output;
}


function chk_take_over_conditions($nid){
    
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  // Check if PAWP enabled; If Yes we will redirect user to PAWP page
  $check_pawp_submission = custom_pawp_check_cc_status(1);
  // check if RSVP is enabled and user has access to it
  $rsvp = variable_get('en_rsvp', 0);
  $rsvp_access = tmapi_get_rsvp_access();
  //$node = node_load('116');
  $user_limit_exceeded = _webform_submission_user_limit_check($node);
  $birthday_takeover_access = tm_user_birthday_access();
  $birthday = variable_get('en_birthday', 0);
  //$user_session = isset($_SESSION['Drupal_visitor_pawp']) ? $_SESSION['Drupal_visitor_pawp'] : 0;
  if ($rsvp && $rsvp_access && !$user_limit_exceeded) {
    $url = 'rsvp-form';
  }
  elseif ($birthday_takeover_access && $birthday && (variable_get('birth_nid',0) == $nid)) {
    $url = 'birthday-wishes';
  }
  elseif ((variable_get('en_pawp', 0)) && !$check_pawp_submission && (variable_get('pawp_nid',0) == $nid)) {
    $url = 'pawp/nojs/form';
  }
  else {
    $url = 'node/'.$nid;
  }
  return $url;
}

function take_over_insert_data($nid, $uid){
    global $user;
   db_insert('tm_take_over')
    ->fields(
    array(
      'acct_id' => $uid,
      'nid' => $nid,
    )
  )
  ->execute();
}