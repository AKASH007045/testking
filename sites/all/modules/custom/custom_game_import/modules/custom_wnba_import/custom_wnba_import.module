<?php
// @file

/**
 * Implements hook_menu()..
 */
function custom_wnba_import_menu() {
  $items = array();  
  $items['admin/manage/settings/wnba_feed'] = array(
    'title' => 'WNBA Feed Import Settings',
    'description' => 'WNBA XML Feed Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_wnba_import_settings'),
    'access arguments' => array('administer rss game feed import'),
     'file' => 'custom_game_import.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 19
  );
  $items['admin/manage/settings/wnba_feed/settings'] = array(
    'title' => 'NFL Feed Import Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 19
  );
  $items['admin/manage/settings/wnba_feed/manual-import'] = array(
   'title' => 'WNBA Feed Import',
    'description' => 'WNBA Manual XML Feed Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_wnba_import_events_import'),
    'access arguments' => array('administer game feed import'),
    'file' => 'custom_wnba_import.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20
  );  
  return $items;
}

/**
 * Implements hook_cron().
 *
 * hook_cron() is the traditional (pre-Drupal 7) hook for doing "background"
 * processing. It gets called every time the Drupal cron runs and must decide
 */
function custom_wnba_import_cron() {
  // Default to an daily interval. Of course, cron has to be running at least
  // daily for this to work.
  $interval = variable_get('wnba_ticketmaster_cron_interval', 24*60*60);
  
  // We usually don't want to act every time cron runs (which could be every
  // minute) so keep a time for the next run in a variable.
  if (variable_get('wnba_ticketmaster_run_cron') == 1) {
   if (time() >= variable_get('custom_wnba_ticketmaster_cron_next_execution', 0)) {
      // This is a silly example of a cron job.
      // It just makes it obvious that the job has run without
      // making any changes to your database.
      module_load_include('inc', 'custom_wnba_import', 'custom_wnba_import');
      custom_wnba_import_events_cron_import();
      $test = variable_set('custom_wnba_ticketmaster_cron_next_execution', time() + $interval);
      watchdog('custom_wnba_import', 'custom_wnba_feed_import game feed import cron run');
    }
  }
}

/**
 * function for XML Parsing
 */
function custom_wnba_import_xml2assoc($xml) {
  $tree = null;
  while($xml->read())
    switch ($xml->nodeType) {
      case XMLReader::END_ELEMENT: return $tree;
      case XMLReader::ELEMENT:
          $node = array('tag' => $xml->name, 'value' => $xml->isEmptyElement ? '' : custom_wnba_import_xml2assoc($xml));
          if($xml->hasAttributes)
              while($xml->moveToNextAttribute())
                $node['attributes'][$xml->name] = $xml->value;
          $tree[] = $node;
      break;
      case XMLReader::TEXT:
      case XMLReader::CDATA:
      $tree .= $xml->value;
    }
    return $tree;
}

/**
 * custom function to parse wnba feeds as array
 * @params, $feed_url is the url of wnba
   //may be preseason or post season
 */
function custom_wnba_import_parseFeedXml($feed_url = NULL){
  if (isset($feed_url) && !empty($feed_url)){
    $xml = new XMLReader();
    if (fopen($feed_url, 'r')) {
      $feed = file_get_contents($feed_url);
    }	
    $xml->XML($feed);
    $assoc = custom_wnba_import_xml2assoc($xml);	
    $xml->close();	
    $node_arr = array();
    $c = 0;
    $g = 0;	
    
    foreach($assoc[0]['value'] as $gs) {
    $c = 0;
    $node_arr[$g]['attributes']['i'] = $gs['attributes']['i'];
    $node_arr[$g]['attributes']['d'] = $gs['attributes']['d'];
    $node_arr[$g]['attributes']['tm'] = $gs['attributes']['tm'];
    $node_arr[$g]['attributes']['vtm'] = $gs['attributes']['vtm'];
    $node_arr[$g]['attributes']['htm'] = $gs['attributes']['htm'];
    $node_arr[$g]['attributes']['vrad'] = $gs['attributes']['vrad'];
    $node_arr[$g]['attributes']['hrad'] = $gs['attributes']['hrad'];
    $node_arr[$g]['attributes']['p'] = $gs['attributes']['p'];
    $node_arr[$g]['attributes']['st'] = $gs['attributes']['st'];
    $node_arr[$g]['attributes']['cl'] = $gs['attributes']['cl'];
    $node_arr[$g]['attributes']['r'] = $gs['attributes']['r'];
    $node_arr[$g]['attributes']['ser'] = $gs['attributes']['ser'];
    $node_arr[$g]['attributes']['is'] = $gs['attributes']['is'];
    foreach($gs['value'] as $gsv) {     
      switch ($gsv['tag']) {
  case 'v':       
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['visiting'] = '1';
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['home'] = '0';
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['t'] = $gsv['attributes']['t'];
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['re'] = $gsv['attributes']['re'];
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['s'] = $gsv['attributes']['s'];
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['see'] = $gsv['attributes']['see'];
    $c++;
    break;
  case 'h':
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['home'] = '1';
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['visiting'] = '0';
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['t'] = $gsv['attributes']['t'];
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['re'] = $gsv['attributes']['re'];
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['s'] = $gsv['attributes']['s'];
    $node_arr[$g]['child_elem'][$c][$gsv['tag']]['see'] = $gsv['attributes']['see'];
    $c++;
    break;
      }     
    }
    $g++;   
  }
    $cnt = 0;
  foreach ($node_arr as $val) {
    $data[$cnt]['gamecode'] = $val['attributes']['i'];
    $data[$cnt]['stadium'] = '';
    $data[$cnt]['visiting-team'] = $val['child_elem'][0]['v']['t'];
    $data[$cnt]['visiting-team-score'] = $val['child_elem'][0]['v']['s'];
    $data[$cnt]['home-team'] = $val['child_elem'][1]['h']['t'];
    $data[$cnt]['home-team-score'] = $val['child_elem'][1]['h']['s'];
    $data[$cnt]['date'] = $val['attributes']['d'];
    $data[$cnt]['time'] = str_replace(' ET', '', $val['attributes']['tm']);
    $cnt++;
  }
  return $data;
  }
  else{
    return array();
  }
}

/**
 * Purpose: get home team nid
 * This is very important to get home team of a site.
 * Home team can be choose from "admin/manage/teams"
 */
function custom_wnba_get_hometeam_nid(){
 $home_team_nid = db_query("SELECT n.entity_id FROM {field_data_field_home_team} n WHERE field_home_team_value = 1")->fetchField();
 return $home_team_nid;
}