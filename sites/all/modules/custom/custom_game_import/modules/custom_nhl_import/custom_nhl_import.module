<?php
// @file

/**
 * Implements hook_menu()..
 */
function custom_nhl_import_menu() {
  $items = array();  
  $items['admin/ticketmaster/nhl_feed_import'] = array(
    'title' => 'NHL Feed Import',
    'description' => 'NHL Feed Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_nhl_import_events_import'),
    'access arguments' => array('administer game feed import'),
    'file' => 'custom_nhl_import.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/manage/settings/nhl_feed_import_settings'] = array(
    'title' => 'NHL Feed Import Settings',
    'description' => 'NHL XML Feed Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_nhl_import_settings'),
    'access arguments' => array('administer rss game feed import'),
    'file' => 'custom_game_import.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 19
  );  
  return $items;
}

/**
 * Implements hook_cron().
 *
 * hook_cron() is the traditional (pre-Drupal 7) hook for doing "background"
 * processing. It gets called every time the Drupal cron runs and must decide
 */
function custom_nhl_import_cron() {
  // Default to an daily interval. Of course, cron has to be running at least
  // daily for this to work.
  $interval = variable_get('custom_nba_ticketmaster_cron_interval', 24*60*60);
  // We usually don't want to act every time cron runs (which could be every
  // minute) so keep a time for the next run in a variable.
  if (variable_get('ticketmaster_run_cron', 1) == 1) {
    if (time() >= variable_get('custom_nba_ticketmaster_cron_next_execution', 0)) {
      // This is a silly example of a cron job.
      // It just makes it obvious that the job has run without
      // making any changes to your database.
      module_load_include('inc', 'custom_nhl_import', 'custom_nhl_import');
      custom_nhl_import_events_cron_import();
      variable_set('custom_nba_ticketmaster_cron_next_execution', time() + $interval);
      watchdog('custom_nhl_import', 'custom_nba_feed_import game feed import cron run');
    }
  }
}

/**
 * Custom function to import data from feeds.
 */
function custom_nhl_import_events_feed_import($season = '') {	
  $url = trim(variable_get('nhl_feed_base_url', ''));
  $partner = trim(variable_get('nhl_partner_name', ''));
  $key = trim(variable_get('nhl_secret_key', ''));
     
  $time =  ceil(microtime(true)*1000);
  $hash = sha1($partner . $time . $key);
  $feed_url = $url . '&auth=' . $partner . "|" . $time . "|" . $hash;
  if (fopen($feed_url, 'r')) {
    $feed = file_get_contents($feed_url);
    $schedule = array();
    $json_schedule = json_decode($feed);    
    $c = 0;    
    foreach($json_schedule->games as $js){
      $schedule[$c]['time'] = $js->localStartTime;
      $schedule[$c]['location'] = $js->location;
      $schedule[$c]['gamecode'] = $js->gameId;
      $schedule[$c]['date'] = $js->date;
      $schedule[$c]['home-team'] = 'NYR';
      $schedule[$c]['visiting-team'] = $js->abbreviation;
      $schedule[$c]['final_score'] = $js->score;
      $t = explode("-", str_replace(' ', '', $js->score));
      $ct = 0;      
      $win_or_lost = 'L';
      foreach ($t as $tk => $tv){
        $t[$tk] = trim($tv);
        if (substr($t[$tk],-1) == 'W'){ 
         $t[$tk] = str_replace("W", "", $t[$tk]);	 
	 $win_or_lost = 'W';		 
	}
	else if (substr($t[$tk],-1) == 'L'){
         $t[$tk] = str_replace("L", "", $t[$tk]);
	 }
	 else if (substr($t[$tk],-1) == 'O'){
         $t[$tk] = str_replace("O", "", $t[$tk]);
	 }
        $vts[$ct] = $t[$tk];
        $ct++;		
      }
	  $max = max($vts);
	  $min = min($vts);
	  if ($win_or_lost == 'W'){
	   $Home_max_value = $max;
	   $away_min_value = $min;
	  } else { //if $win_or_lost == 'O' also we can give the home team is lost
	  $Home_max_value = $min;
	  $away_min_value =  $max;
	  }
      $schedule[$c]['visiting-team-score'] = $away_min_value;
      $schedule[$c]['home-team-score'] = $Home_max_value;
      $c++;
    }
        
    return $schedule;    
   
  }
}

/**
 * Purpose: get home team nid
 * This is very important to get home team of a site.
 * Home team can be choose from "admin/manage/teams"
 */
function custom_nhl_get_hometeam_nid(){
 $home_team_nid = db_query("SELECT n.entity_id FROM {field_data_field_home_team} n WHERE field_home_team_value = 1")->fetchField();
 return $home_team_nid;
}